//TODO: translate

$("#bivariate_charts").prepend("<div id='wrapper_<%= @container_id %>'></div>");
$("#wrapper_<%= @container_id %>").html("<%= escape_javascript(render partial: 'scatter_plot_chart') %>");

var number_of_points = 0

<% @chart.chart_data.each_value do |values|
    values.each do%>
        number_of_points++
    <%end
end %>

try {
    $(document).ready(function() {
        new Highcharts.Chart({
        chart: {
            renderTo: '<%= @container_id %>',
            type: 'scatter'
        },
        title: { text: '\'<%= @chart.x_axis_label %>\' versus \'<%= @chart.y_axis_label %>\'' },
        xAxis: {
            title: { text: '<%= @chart.x_axis_label %>' },
            <% if @chart.type_of_x == 'string' %>
                categories: <%= raw @chart.categories_for_x %>,
            <% else %>
                type: '<%= @chart.x_axis_type or 'linear' %>',
                 <% if @chart.x_axis_notation == 'scientific'%>
                     labels:{
                        formatter: function(){
                            return this.value.toExponential(2);
                       }
                   }
                 <% end %>
            <% end %>

        },
        yAxis: {
            title: { text: '<%= @chart.y_axis_label %>' },
            <% if @chart.type_of_y == 'string' %>
                categories: <%= raw @chart.categories_for_y %>,
            <% else %>
                type: '<%= @chart.y_axis_type or 'linear' %>',
                <% if @chart.y_axis_notation == 'scientific'%>
                    labels:{
                        formatter: function(){
                            return this.value.toExponential(2);
                        }
                    }
                <% end %>
            <% end %>

        },
        tooltip: {
            //need to this way, because yAxis has small support for this.y with string type
            formatter: function () {
                return '<%= @chart.x_axis_label %>: <b>' + this.x + '</b><br/><%= @chart.y_axis_label %>: <b>' +
                        <% if @chart.type_of_y == 'string' %>
                            <%= raw @chart.categories_for_y%>[this.y]
                        <% else %>
                            this.y
                        <% end %>
                        + '</b><br /><b><%= t '.click_for_details' %></b>';
            }
        },
        // above 1000 points that cointatins strings chart is not displayed without TurboThreshold
        // TODO decide if it is necessary
        plotOptions: {
            series: {
                //enable to plot more than 1000 points (default),
                // with 0 it check every point format,
                // with specific value only the first point is tested and the rest are assumed to be at the same format
                turboThreshold: number_of_points,
            },
        },
        credits: { enabled: false },
        series: [
            <%if  @chart.type_of_x != "string" && @chart.type_of_y != "string"%>
                <% if @chart.linear_regression_possible? %>
                  {
                      type: 'line',
                      name: "<%= t '.regression_line' %>",
                      data: <%= @chart.linear_regression_data %>,
                      marker: {
                          enabled: false
                      },
                      enableMouseTracking: false
                  },
                <% end %>
            <% end %>
        {
            name: '<%= @chart.x_axis_label.split(" - ")[-1]%>',
            color: 'rgba(223, 83, 83, .5)',
            data: [
                <% @chart.chart_data.each do |x_value, y_values_simulation_ids|
                     y_values_simulation_ids.each do |y_value, simulation_id| %>
                { x: <%= raw x_value %>, y: <%= raw y_value %>, simulation_id: '<%= simulation_id %>' },
                <% end
            end %>
            ],
            cursor: 'pointer',
            point: {
                events: {
                    click: function () {
                        var extension_dialog = $('#extension-dialog');
                        extension_dialog.html(window.loaderHTML);
                        extension_dialog.load("/experiments/" + "<%= @experiment.id %>" + "/simulations/" + this.simulation_id);
                        window.reopeningModals = {
                          id: "experiment-analysis-modal",
                          isActive: true
                        };
                        extension_dialog.foundation('reveal', 'open');
                    }
                }
            }
        }]
      });
    });
    // scroll to
    var targetOffset =  $('#wrapper_<%= @container_id %>').offset().top;
    $('html,body').animate({scrollTop: targetOffset}, 1000);

} catch(e) {
    $('#wrapper_<%= @container_id %>').hide();
    var msg = e;
    if (e.match(/Highcharts error #10/)) {
        msg = "Can't plot zero or subzero values on a logarithmic axis";
    }
    toastr.error("An error occured: " + msg);
} finally {
    $('#busy_bivariate').hide();
}

