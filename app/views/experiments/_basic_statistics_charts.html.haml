%section.panel.radius.list.analysis-chart#basic_charts_form
  %h3.subheader= t('charts.histogram.section_header')

  .row
    .small-10.columns
      .small-3.columns
        = label_tag :moe_name, t('charts.histogram.select_moe') + ':', class: 'inline'
      .small-9.columns
        = select_tag 'moe_name', '', { class: 'moe_list' , id: "select_moe"}

  .row
    .small-10.columns
      .small-3.columns
        = label_tag :resolution, t('charts.histogram.resolution') + ':', class: 'inline', id: "label_number_of_bars"
      .small-9.columns
        = text_field_tag 'resolution', 10, id: "number_of_bars"

  .row
    %ul.inline-list
      %li= submit_tag t('charts.load_button'), class: 'button radius', id: "load_chart_button"
      %li= image_tag 'loading.gif', :id => 'busy_rt', size: '16x16', style: 'display: none'


#basic_charts

- content_for :javascript do
  :javascript
    var basic_chart_tab = [];

    // 'Load chart' button handler
    //$('#basic_charts_form').find('input[type=submit]').bind('click', function() { //was earlier
    $('#basic_charts_form').find('#load_chart_button').bind('click', function() {
      if (check_if_no_results_to_plot() == true) {
        return;
      }
      try {
        $('#busy_basic').show();
        var moe_name = $('#basic_charts_form select[name=\'moe_name\'] option:selected').val();
        var resolution = $('#basic_charts_form input[name=\'resolution\']').val();
        resolution = parseInt(resolution);

        var index_of_moe = window.moes_info.moes_names.indexOf(moe_name)
        var type_of_moe = window.moes_info.moes_types[index_of_moe]

        if (type_of_moe == "string") {
          $('#basic_charts_form').find('#number_of_bars').hide();
          $('#basic_charts_form').find('#label_number_of_bars').hide();

          $.post("#{histogram_experiment_path(@experiment.id)}",
            { 'moe_name': moe_name, 'resolution': resolution, 'type' : type_of_moe },
            function(data) { $('#busy_basic').hide(); }
          );
        }
        else if(isNaN(resolution) || resolution < 1 || resolution > 100){
          toastr.error("#{t('experiments.errors.invalid_resolution')}");
          $('#busy_basic').hide();
        }
        else {
          $.post("#{histogram_experiment_path(@experiment.id)}",
            { 'moe_name': moe_name, 'resolution': resolution, 'type' : type_of_moe },
            function(data) { $('#busy_basic').hide(); }
          );
        }
      } catch (e) {
        $('#busy_basic').hide();
        toastr.error("#{t('errors.loading_chart')}" + ": " + e);
      }

      function check_if_no_results_to_plot() {
        if ( typeof(window.moes_info.moes_names) == 'undefined') {
          toastr.error("No results to plot on chart");
          return true;
      }
    }
    });

    $('#basic_charts_form').find('#select_moe').change( function() {
      try {
        var moe_name = $('#basic_charts_form select[name=\'moe_name\'] option:selected').val();
        var index_of_moe = window.moes_info.moes_names.indexOf(moe_name)
        var type_of_moe = window.moes_info.moes_types[index_of_moe]

        if (type_of_moe == "string") {
          $('#basic_charts_form').find('#number_of_bars').hide();
          $('#basic_charts_form').find('#label_number_of_bars').hide();

        } else {
          $('#basic_charts_form').find('#number_of_bars').show();
          $('#basic_charts_form').find('#label_number_of_bars').show();
        }
        $.post("#{histogram_experiment_path(@experiment.id)}",
            { 'type' : type_of_moe },
            function(data) { $('#busy_basic').hide(); }
        );
      } catch (e) {
        $('#busy_basic').hide();
        toastr.error("#{t('errors.loading_chart')}" + ": " + e);
      }
    });

