en:
  help:
    no_help: No help information is available for this page
    experiments:
      summary: "
      <p>This page aggregates information about experiments in Scalarm.
       The following sections contain:
       <ul>
        <li>a list of currently running experiments,</li>
        <li>registered simulation scenarios that you can use to create a new experiment,</li>
        <li>and a list of historical experiments, i.e. experiments which were stopped but not destroyed.</li>
       </ul>
       Click an element of a list to go to either a monitoring view of an experiment or to a page for creating new experiment.
      </p>
      "

      monitoring: "
      <p>You are on a progress monitoring view of a single experiment. It is divided into three parts:
      <ul>
        <li>upper bar - provides links to other experiments (both running and historical) and available simulation scenarios based on which
        you can create new experiments</li>
        <li>main window - provides information about experiment, progress and resources</li>
        <li>left sidebar - provides options to management experiment, browse results and analysis methods.</li>
      </ul>


      <ul>
        Main window is divided into three sections:
        <li><tt>Experiment information</tt>- provides basic information about your experiment, also enables to edit this
         information, share the experiment with other users or stop the experiment execution
        </li>
        <li><tt>Computational resources summary</tt> - provides a summary of the computing resources used in the experiment
        </li>
        <li><tt>Experiment progress</tt> - is the main monitoring view, which provides information about simulation runs included
         in this experiment (how many simulation runs are in the experiment, how many of them are currently executing, and
         how many of them have been already completed); there are also progress bar.
        </li>
      </ul>
      </p>

      <p>
      The experiment progress bar indicates the status of each simulation run included in the experiment with colors:
      <ul>
        <li>gray - the simulation run is ready to execute</li>
        <li>dark green - the simulation run is currently running</li>
        <li>light green - the simulation run has been finished</li>
        <li>red - the simulation run has been finished but an execution error has been reported</li>
      </ul>
      The progress bar consists of many elements representing one or more simulation runs. You can click on each of the
      elements to get more detailed information about the selected simulation run.
      </p>

      <p>
      <tt>Computational resources summary section</tt> contains several action buttons divided into groups related to computations and experiment
      management. The computations-related actions are as follows:
      <ul>
        <li><tt>Add computing power</tt> - enables you to schedule computations onto one or many of the supported
         computational infrastructures</li>

        <li><tt>Download Simulation Manager</tt> - enables you to download a module of Scalarm called Simulation Manager
          which is used to execute simulation runs within this experiment. You can use it to run the experiment on your
          own resource, e.g. to debug your simulation code.</li>
      </ul>

      The experiment management menu contains actions as follows:
      <ul>
        <li><tt>Extend input space</tt> - enables you to add more values of selected input parameters.</li>

        <li><tt>Set scheduling method</tt> - sets the order in which simulation runs are executed.</li>

        <li><tt>Computational resources</tt> - link to computational resources tree.</li>
      </ul>

      The experiment browse result menu contains actions as follows:
      <ul>
        <li><tt>Show progress</tt> - shows in separated tables aggregated results of running and completed simulation
                  runs.</li>

        <li><tt>Simulations output (binaries)</tt> - downloads results in a binary form.</li>

        <li><tt>Configurations (CSV)</tt> - downloads results structural form (the CSV format).</li>
      </ul>

      </p>

      <p>
      Below experiment management menu is analysis menu where you can open windows for different data exploration methods:
      <ul>
        <li>histogram</li>
        <li>scatter plot</li>
        <li>linear</li>
        <li>3D chart</li>
        <li>regression trees</li>
        <li>interaction</li>
        <li>hierarchical clustering.</li>
      </ul>
      </p>
      "

    simulations:
      summary: "
      <p>
      This view aggregates information about registered simulation scenarios and individual adapters. In subsequent
      sections you can:
      <ul>
        <li>select scenario to create new experiment,</li>
        <li>click the <tt>'Register new simulation or adapter</tt>' button to go to the registration form,</li>
        <li>show registered simulation scenarios with used adapters and deregister them,</li>
        <li>show registered adapters (each adapter type has a separate section) and deregister them if they are not used
        in a simulation scenarios</li>
      </ul>
      </p>
      "
      deregister: Click this button to deregister and remove this adapter from Scalarm.
      conduct: "
      <p>Here you can specify parameter space for a newly created experiment, which will use the selected simulation scenario.</p>
      <p>
      The first section below enables you to provide a descriptive summary for your experiment. If not provided, the experiment
      will have name and description taken from the used simulation. The experiment name is used then on the experiment
      list for identification.
      </p>
      <p>
      In the second section you can choose type of experiment:
        <ul>
          <li><strong>Manual</strong> is where you specify parametric space by defining parameters ranges,</li>
          <li><strong>Automatic</strong> is where you chose that searches the parametric space.</li>
        </ul>
      When you select first option in the second section you can choose way of specyfication input space:
        <ul>
          <li><strong>Manual designed</strong> is where you specify parametric space by form on the site,</li>
          <li><strong>CSV imported</strong> is where you import specification from CSV file.</li>
        </ul>
      For manual designed experiment:
      in the next section, the parameter space specification takes place. It is divided into 3 steps represented by tabs:
        <ul>
        <li><strong>Parametrization</strong> is where you select parametrization type for each input parameter
        and actual values which will be used for each parameter
        to generate the parameter space. Each parametrization type requires different values.</li>
        <li><strong>Design of Experiment (optional)</strong> is where you can collect parameters into groups and apply DoE
        methods to sample the parameter space in a specific way. In this step only parameters with the 'Range' parametrization type
        can be used. Firstly, select a DoE method you want to use and then add parameters to this group.</li>
        <li><strong>Parameter constraints (optional)</strong> is where you can specify the relationship between parameters.</li>
        </ul>
      In any time you can check how many parameter space elements will be created with the specified parametrization.
      Besides parametrization you can specify time constraint for a single simulation run. This value will be used by Scalarm
      to detect any failures in simulation runs.
      </p>
      <p>
      For CSV imported experiment:
      the experiment parameter space can be also specified by providing a CSV file with
      information about parameter space elements. In this case, the CSV file should have parameter ids as the header.
      In subsequent rows, there can be either one value or a list of values (a cartesian product will be generated).
      To use this option: choose the CSV file to import -> click the 'Import' button, select columns from the file which
       should be imported -> Click the 'Start experiment' button.
      <br/>In any time you can check how many parameter space elements will be created with the imported file.
      </p>
      <p>
      If you select Automatic type of experiment, you can choose an algorithm and define its parameters.
      </p>
      "
      register: "<p>
      Here you can register a new simulation scenario to be used in data farming experiments. To register a simulation
      scenario you need to provide:
      <ul>
        <li>name to identify the scenario afterwards, and optionally a meaningful description</li>
        <li>compressed simulation binaries which hold the actual simulation logic (currently we support the ZIP format and
         we encourage to have all files in a 'simulation_binaries' folder)</li>
        <li>input description (in the JSON format), which contains information about simulation parameters - this file is
        then used to prepare the parameter space for experiments</li>
        <li>input_reader which is a script executed before simulation. Its main goal is to transform input values from
        the JSON form, i.e. the form supported by Scalarm, to any form support by the simulation. It is given a path to
        a JSON file with input values for the simulation.</li>
        <li>executor intends to start the simulation and pass input parameters in a simulation-dependant way</li>
        <li>output_reader intends to transform the simulation results from a simulation-dependant form into
        the Scalarm-compatible form, i.e. JSON</li>
        <li>progress_monitor is responsible for transforming intermediate results from application-specific form to
        Scalarm-compatible JSON document. It is called by a Simulation manager child process.</li>
      </ul>
      </p>

      <p>The 'executor' adapter is the only mandatory element. Other adapters are optional - we encourage to use them
      to split responsibility for different aspects of running simulations. Adapters can be uploaded while registering
      simulation scenario or may by uploaded separately.</p>
      "

    users:
      summary: "
      <p>
      Here you can set or change credentials to:
      <ul>
        <li>your Scalarm account</li>
        <li>computational infrastructures supported by Scalarm</li>
      </ul>
      </p>
      <p>
      Each infrastructure may require different access information, e.g. to access PL-Grid User Interface host with login and
      password is sufficient, but Amazon EC2 requires different secret keys.
      </p>
      <p>
      Credentials are utilized to schedule Simulation Managers
      (workers) onto different infrastructures and to monitor them afterwards. In any time, you can remove credentials from Scalarm.
      Internally, Scalarm keeps credentials in an encrypted form, where the encryption parameters can be set for each Scalarm
      installation separately.
      </p>

      "
